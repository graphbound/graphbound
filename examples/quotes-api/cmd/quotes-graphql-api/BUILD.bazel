load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

go_library(
    name = "quotes-graphql-api_lib",
    srcs = [
        "config.go",
        "main.go",
        "wire_gen.go",
    ],
    importpath = "github.com/graphbound/graphbound/examples/quotes-api/cmd/quotes-graphql-api",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/http/graph",
        "//internal/http/graph/generated",
        "//internal/http/rest",
        "//internal/quote",
        "//pkg/yeapi",
        "@com_github_gin_gonic_gin//:gin",
        "@com_github_graphbound_graphbound//pkg/config:go_default_library",
        "@com_github_graphbound_graphbound//pkg/httpds:go_default_library",
        "@com_github_graphbound_graphbound//pkg/log:go_default_library",
        "@com_github_graphbound_graphbound//pkg/server:go_default_library",
        "@com_github_hellofresh_health_go_v5//:health-go",
        "@com_github_kelseyhightower_envconfig//:envconfig",
    ],
)

go_binary(
    name = "quotes-graphql-api",
    embed = [":quotes-graphql-api_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "app_layer",
    srcs = [":quotes-graphql-api"],
)

oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/quotes-graphql-api"],
    tars = [":app_layer"],
)

platform_transition_filegroup(
    name = "transitioned_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

oci_tarball(
    name = "tarball",
    image = ":transitioned_image",
    repo_tags = ["graphbound/quotes-graphql-api:latest"],
)
