package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"

	"github.com/google/uuid"
	"github.com/graphbound/graphbound/examples/quotes-api/internal/http/graph/generated"
	"github.com/graphbound/graphbound/examples/quotes-api/internal/http/graph/model"
)

// Quotes is the resolver for the quotes field.
func (r *queryResolver) Quotes(ctx context.Context) ([]*model.Quote, error) {
	q, err := r.getQuoteUseCase.Execute(ctx)
	if err != nil {
		return nil, err
	}

	return []*model.Quote{
		{
			ID:   uuid.NewString(),
			Text: q.Value,
		},
	}, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
